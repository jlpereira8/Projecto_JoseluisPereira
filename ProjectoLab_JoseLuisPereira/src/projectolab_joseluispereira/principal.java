/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectolab_joseluispereira;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author j0c3lwiz
 */
public class principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    static ArrayList<String> ordenar = new ArrayList();
    static FileReader Reader = null;
    static File Archivo = null;
    static BufferedReader Buffered = null;
    static ArrayList<String> tokens1 = new ArrayList();
    static ArrayList<String> al = new ArrayList();

    private void leer(String path) throws FileNotFoundException, IOException {

        Archivo = new File(path);
        if (Buffered != null) {
            Buffered.close();
            Reader.close();
            ta_texto.setText("");
        }
        Reader = new FileReader(Archivo);
        Buffered = new BufferedReader(Reader);
        try {
            combinaciones();
        } catch (Exception e) {
            e.getStackTrace();
        }
    }

    public principal() {
        initComponents();
        no_usar.add("and");
        no_usar.add("you");
        no_usar.add("an");
        no_usar.add("the");
        no_usar.add("to");
        no_usar.add("for");
        no_usar.add("a");
        no_usar.add("at");
        no_usar.add("is");
        no_usar.add("from");
        no_usar.add("on");
        no_usar.add("of");
        no_usar.add("by");
        no_usar.add("in");
        no_usar.add("I");
        no_usar.add("i");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_texto = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Seleccionar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_main = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ta_texto.setColumns(20);
        ta_texto.setRows(5);
        jScrollPane1.setViewportView(ta_texto);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jLabel1.setText("Texto Seleccionado");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Seleccionar.setText("Seleccionar Texto");
        Seleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SeleccionarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(Seleccionar)
                .addContainerGap(186, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Seleccionar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ta_main.setColumns(20);
        ta_main.setRows(5);
        jScrollPane2.setViewportView(ta_main);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Separador");

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setText("Mostrar el top 10 Actual");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton1.setText("Selccionar linea");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jButton2)
                .addGap(78, 78, 78)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(226, 226, 226))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SeleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SeleccionarMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser jfc = new JFileChooser("./");
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archvivos de Texto", "txt");

            jfc.setFileFilter(filtro);

            int seleccion = jfc.showOpenDialog(this);
            if (seleccion == JFileChooser.APPROVE_OPTION) {
                leer(jfc.getSelectedFile().getAbsolutePath());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_SeleccionarMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            // TODO add your handling code here:
            combinaciones();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        if (ordenar.size()>=10) {                 
        jTextArea1.setText("");
        Collections.sort(ordenar);
        System.out.println(ordenar);  
        int aux=0;
        jTextArea1.append(ordenar.get(ordenar.size()-1)+"\n"+ordenar.get(ordenar.size()-2)+"\n"+ordenar.get(ordenar.size()-3)+"\n"+ordenar.get(ordenar.size()-4)+"\n"+ordenar.get(ordenar.size()-5)+"\n"+ordenar.get(ordenar.size()-6)+"\n"+ordenar.get(ordenar.size()-7)+"\n"+ordenar.get(ordenar.size()-8)+"\n"+ordenar.get(ordenar.size()-9)+"\n"+ordenar.get(ordenar.size()-10)+"\n");
        jDialog1.setModal(true);
        jDialog1.pack();
        jDialog1.setLocationRelativeTo(this);
        jDialog1.setVisible(true);
        }else{
             JOptionPane.showMessageDialog(this, "Aun no hay 10 palabras almacenadas");
                }
    }//GEN-LAST:event_jButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });

    }

    public void combinaciones() throws IOException {
        String line = "";
        if ((line = Buffered.readLine()) != null) {
            ta_texto.append(line+"\n");
            String tokensbb[] = line.split(" ");
            line = line.replace("?", "");
            line = line.replace(".", "");
            line = line.replace("!", "");
            line = line.replace(",", "");
            line = line.replace(":", "");
            line = line.replace(";", "");
            line = line.replace(")", "");
            line = line.replace("(", "");
            line = line.replace("/", "");
            line = line.replace("-", "");
            line = line.replace("+", "");
            line = line.replace("*", "");
            line = line.replace("'", "");
            line = line.replace("‘", "");
            line = line.replace("_", "");
            line = line.replace("[", "");
            line = line.replace("]", "");
            line = line.replace("#", "");
            line = line.replace("'", "");

            line = line.replace("1", "");
            line = line.replace("2", "");
            line = line.replace("3", "");
            line = line.replace("4", "");
            line = line.replace("5", "");
            line = line.replace("6", "");
            line = line.replace("7", "");
            line = line.replace("8", "");
            line = line.replace("9", "");
            if (line.isEmpty()) {
            } else {
                 int cont = 0;
                 String actual = "";
                ArrayList<String> tokens2 = new ArrayList();
                ArrayList<Integer> repiten = new ArrayList();
                String tokens[] = line.split(" ");

               for (int i = 0; i < tokens.length; i++) {
            tokens2.add(tokens[i]);
        }
        for (int i = 0; i < tokens2.size(); i++) {
            for (int j = 0; j < no_usar.size(); j++) {
                if (tokens2.get(i).toLowerCase().equals(no_usar.get(j).toLowerCase())) {
                    tokens2.remove(i);
                }
            }
        }
        for (int i = 0; i < tokens2.size(); i++) {
            actual = tokens2.get(i);
            cont++;
            for (int j = i + 1; j < tokens2.size(); j++) {
                if (actual.equals(tokens2.get(j))) {
                    cont++;
                    tokens2.remove(j);
                }
            }
            repiten.add(cont);
            cont = 0;
        }

                for (int i = 0; i < tokens2.size(); i++) {
                    String nueva = tokens2.get(i);
                    for (int j = i + 1; j < tokens2.size(); j++) {
                        if (nueva.equals(tokens2.get(j))) {
                            tokens2.remove(j);
                        }
                    }
                }

                for (int i = 0; i < tokens2.size(); i++) {
                    String nueva = tokens2.get(i);
                    for (int j = i + 1; j < tokens2.size(); j++) {
                        if (nueva.equals(tokens2.get(j))) {
                            tokens2.remove(j);
                        }
                    }
                }

                for (int i = 0; i < tokens2.size(); i++) {
                    String nueva = tokens2.get(i);
                    for (int j = i + 1; j < tokens2.size(); j++) {
                        if (nueva.equals(tokens2.get(j))) {
                            tokens2.remove(j);
                        }
                    }
                }

                for (int i = 0; i < tokens2.size(); i++) {
                    String nueva = tokens2.get(i);
                    for (int j = i + 1; j < tokens2.size(); j++) {
                        if (nueva.equals(tokens2.get(j))) {
                            tokens2.remove(j);
                        }
                    }
                }

                for (int i = 0; i < tokens2.size(); i++) {
                    String nueva = tokens2.get(i);
                    for (int j = i + 1; j < tokens2.size(); j++) {
                        if (nueva.equals(tokens2.get(j))) {
                            tokens2.remove(j);
                        }
                    }
                }

                for (int j = 0; j < tokens2.size(); j++) {
                    ta_main.append(tokens2.get(j) + " " + repiten.get(j) + "\n");
                    ordenar.add(repiten.get(j)+""+tokens2.get(j) );
                }

                int auxo = 0;
                ArrayList<Integer> repiten2 = new ArrayList();
                ArrayList<String> pares = new ArrayList();
                for (int i = 0; i < tokens2.size(); i++) {
                    for (int j = i; j < tokens2.size(); j++) {
                        if (tokens2.get(i).equals(tokens2.get(j))) {
                        } else {
                            pares.add(tokens2.get(i) + " " + tokens2.get(j));
                            auxo++;
                            repiten2.add(auxo);
                            auxo = 0;
                        }
                    }
                }
                for (int j = 0; j < pares.size(); j++) {
                    ta_main.append(pares.get(j) + " " + repiten2.get(j) + "\n");

                }

                //Combinaciones 2 
                int ct = 0;
                String s[];
                ArrayList<String> trios = new ArrayList();
                ArrayList<String> trios2 = new ArrayList();
                ArrayList<Integer> repes = new ArrayList();
                int conte = 0;
                for (int i = 0; i < tokens2.size(); i++) {
                    for (int j = i + 1; j < tokens2.size(); j++) {
                        if (pares.get(i).contains(tokens2.get(j))) {

                        } else {
                            trios.add(pares.get(i) + " " + tokens2.get(j));
                        }
                    }
                    conte++;
                    repes.add(conte);
                    conte = 0;
                }
                ///COMBAUD 3
                ArrayList<String> fina = new ArrayList();
                ArrayList<String> fina2 = new ArrayList();
                for (int i = 0; i < trios.size(); i++) {
                    String[] olabb = trios.get(i).split(" ");
                    String palabra1 = olabb[0];
                    String palabra2 = olabb[1];
                    String palabra3 = olabb[2];
                    for (int j = i; j < trios.size(); j++) {
                        if (trios.get(j).contains(palabra1) && trios.get(j).contains(palabra2) && trios.get(j).contains(palabra3)) {

                        } else {
                            fina.add(trios.get(j));
                        }
                    }
                }
                ArrayList<Integer> contador22 = new ArrayList();

                int contado2 = 0;
                for (int i = 0; i < tokens2.size(); i++) {
                    contado2++;
                    for (int j = i + 1; j < tokens2.size(); j++) {
                        for (int k = j + 1; k < tokens2.size(); k++) {
                            if (tokens2.get(j).equals(tokens2.get(i))) {
                            } else {
                                fina2.add(tokens2.get(i) + " " + tokens2.get(j) + " " + tokens2.get(k));
                            }
                        }
                    }
                    contador22.add(contado2);
                    contado2 = 0;
                }
                for (int j = 0; j < contador22.size(); j++) {
                    ta_main.append(fina2.get(j) + " " + contador22.get(j) + "\n");
                }
                pares.clear();
                repiten2.clear();
                fina2.clear();
                contador22.clear();
                tokens2.clear();
                repiten.clear();
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Seleccionar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea ta_main;
    private javax.swing.JTextArea ta_texto;
    // End of variables declaration//GEN-END:variables

    ArrayList<String> no_usar = new ArrayList();
    ArrayList<String> no_usar2 = new ArrayList();

}
